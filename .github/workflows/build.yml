name: SonarQube

on:
  push:
    branches:
      - test
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x  # Cambia la versión según la que estés usando, si es necesario

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      # Instalar y restaurar workloads necesarios
      - name: Install required workloads
        run: dotnet workload restore  # Asegúrate de que los workloads necesarios estén instalados

      - name: Restore dependencies
        run: dotnet restore  # Restaurar dependencias de NuGet

      - name: Build the project
        run: dotnet build --no-restore  # Construir el proyecto sin restaurar de nuevo

      - name: Cache SonarQube Cloud packages
        uses: actions/cache@v4
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarQube Cloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v4
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      # Instalar SonarScanner si no está en caché
      - name: Install SonarQube Cloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      # Ejecutar SonarScanner Begin
      - name: Run SonarCloud analysis - begin
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"DavidC2509_diplomado-nur" /o:"davidc2509" /d:sonar.token="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"

      # Ejecutar las pruebas si es necesario
      - name: Run tests
        run: dotnet test --no-build --verbosity normal

      # Ejecutar SonarScanner End
      - name: Run SonarCloud analysis - end
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN }}"
